{"ast":null,"code":"var _jsxFileName = \"E:\\\\nclarkdev\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\"; //counter\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n  }\n\n  handleIncrement() {\n    console.log('increment');\n  }\n\n  render() {\n    let classes = this.formatBadge();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes,\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement(),\n        className: \"btn btn-secondary btn-sm\",\n        children: \"increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), this.renderTags()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n  formatBadge() {\n    let classes = \"badge bg-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"zero\" : count;\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 46\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["E:/nclarkdev/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","handleIncrement","console","log","render","classes","formatBadge","formatCount","renderTags","length","map","tag"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KADsB;AAAA;;AAM9BC,EAAAA,eAAe,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,KAAKC,WAAL,EAAd;AAEA,wBACE;AAAA,8BACE;AAAM,QAAA,SAAS,EAAED,OAAjB;AAAA,kBAA2B,KAAKE,WAAL;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,OAAO,EAAE,KAAKN,eAAL,EADX;AAEE,QAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAQG,KAAKO,UAAL,EARH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAEDF,EAAAA,WAAW,GAAG;AACZ,QAAID,OAAO,GAAG,WAAd;AACAA,IAAAA,OAAO,IAAI,KAAKP,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOM,OAAP;AACD;;AAEDE,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAER,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAEDS,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKV,KAAL,CAAWE,IAAX,CAAgBS,MAAhB,KAA2B,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAClC,wBACE;AAAA,gBACG,KAAKX,KAAL,CAAWE,IAAX,CAAgBU,GAAhB,CAAqBC,GAAD,iBACnB;AAAA,kBAAeA;AAAf,SAASA,GAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA/C6B;;AAkDhC,eAAed,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n//counter\r\nclass Counter extends Component {\r\n  state = {\r\n    count: 0,\r\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\r\n  };\r\n\r\n  handleIncrement() {\r\n    console.log('increment')\r\n  }\r\n\r\n  render() {\r\n    let classes = this.formatBadge();\r\n\r\n    return (\r\n      <div>\r\n        <span className={classes}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={this.handleIncrement()}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          increment\r\n        </button>\r\n        {this.renderTags()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  formatBadge() {\r\n    let classes = \"badge bg-\";\r\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { count } = this.state;\r\n    return count === 0 ? \"zero\" : count;\r\n  }\r\n\r\n  renderTags() {\r\n    if (this.state.tags.length === 0) return <p>There are no tags</p>;\r\n    return (\r\n      <ul>\r\n        {this.state.tags.map((tag) => (\r\n          <li key={tag}>{tag}</li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}